#!/usr/bin/env python
# -*- coding: utf-8 -*-
# coding=utf-8
#
# Copyright 2014 by yfyang. All Rights Reserved.
import os
import getopt
import os.path
import sys

reload(sys)
# 解决：中文字符写入文件问题
sys.setdefaultencoding('utf-8')

gen_path = os.path.normpath(os.path.dirname(os.path.realpath(sys.argv[0])))

sys.path.append(os.path.join(gen_path, 'pym'))


from japp.application import Application
from japp.utils import read_conf


def usage():
    print "~ "
    print "~ JFinal App gen."
    print "~ Usage: jfgen cmd application_name [-options]"
    print "~"
    print '~ with, new          Create a new application'
    print '~       war          Export the application as a standalone WAR archive'
    print '~       syncdb       Sync Database table to Jfinal Model'
    print '~       idea         Convert the project to Intellij IDEA project'
    print '~       pom          Generate Maven POM file, and comply with the standard configuration Jfinal-app'
    print '~       db [-dir]    Init database script, the default mysql database'
    print '~       help         Show jfgen help'
    print '~'


if __name__ == "__main__":
    if len(sys.argv) < 2:
        usage()
        sys.exit()
    try:
        options, args = getopt.getopt(
            sys.argv[2:], "hd:", ["help", "dir="])
    except getopt.GetoptError:
        sys.exit()

    cmd = sys.argv[1].lower()
    if cmd is None:
        usage()
        sys.exit()

    cmd_path = os.getcwd()
    for name, value in options:
        if name in ("-h", "--help"):
            usage()
        if name in ("-d", "--dir"):
            cmd_path = value
    if cmd == 'new':
        app_name = sys.argv[2]
    else:
        conf = read_conf(cmd_path)
        app_name = conf['app']

    app = Application(cmd_path, gen_path, app_name)

    if cmd == 'new':
        if app_name is None:
            usage()
            sys.exit()
        app.layout()

        app.conf()

        app.code()

        print '%s project create Success!' % app_name
        sys.exit()

    if cmd == 'war':
        app.pack_war()
        sys.exit()

    if cmd == 'pom':
        app.pom()
        sys.exit()

    if cmd == 'syncdb':
        app.syncdb()
        sys.exit()

    if cmd == 'idea':
        app.idea()
        sys.exit()

    if cmd == 'help':
        usage()
        sys.exit()

    usage()
    sys.exit()

